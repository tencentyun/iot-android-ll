name: Android Release CI

on:
  push:
    tags:
      - '*'

env:
  SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
  SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
  RELEASE_KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - run: |
          rm -rf opensource_keystore.jks app-open-config.json app/google-services.json
          gpg -d --passphrase "${{ secrets.GPG_DECRYPT_PASSPHRASE }}" --batch .github/release_keystore.jks.asc > release_keystore.jks
          gpg -d --passphrase "${{ secrets.GPG_DECRYPT_PASSPHRASE }}" --batch .github/app-release-config.json.asc > app-release-config.json
          gpg -d --passphrase "${{ secrets.GPG_DECRYPT_PASSPHRASE }}" --batch .github/google-services.json.asc > app/google-services.json
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Adapt build.gradle from debug to release
        run: |
          sed -i 's#opensource_keystore#release_keystore#g' app/build.gradle
          sed -i "s#'111222'#System.getenv(\"RELEASE_KEYSTORE_PASSWORD\")#g" app/build.gradle
          sed -i 's#app-open-config#app-release-config#g' parse_json.gradle
          sed -i 's#sdk-debug#sdk-release#g' sdk/build.gradle
          sed -i 's#-SNAPSHOT##g' sdk/build.gradle
      - name: Package apk and aar with Gradle
        run: ./gradlew assembleOfficial
      - name: Publish aar to Maven
        run: ./gradlew publish
      - name: Archive the apk
          uses: actions/upload-artifact@v2
          with:
            path: apk/official/release/iot-link-android.apk
      - name: Upload apk to PGY
        run:
          curl -F 'file=@app/build/outputs/apk/official/release/iot-link-android.apk' -F '_api_key=${{ secrets.RELEASE_PGYER_API_KEY }}' https://www.pgyer.com/apiv2/app/upload